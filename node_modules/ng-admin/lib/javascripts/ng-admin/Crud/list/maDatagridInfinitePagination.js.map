{"version":3,"sources":["../../../../../src/javascripts/ng-admin/Crud/list/maDatagridInfinitePagination.js"],"names":["maDatagridInfinitePagination","isScrollingDown","wheelEvent","deltaY","$window","$document","offset","body","restrict","scope","perPage","totalItems","nextPage","link","processing","parseInt","nbPages","Math","ceil","loadedPages","page","loadNextPage","debounce","push","maxWait","isNearBottom","offsetHeight","innerHeight","scrollY","shouldLoadNextPage","handler","addEventListener","$on","removeEventListener","$inject"],"mappings":";;;;;kBASwBA,4B;;AATxB;;;;AACA;;;;;;AAEA,IAAMC,kBAAkB,SAAlBA,eAAkB,aAAc;AAClC,QAAI,CAACC,UAAL,EAAiB,OAAO,IAAP;;AAEjB,WAAOA,WAAWC,MAAX,GAAoB,CAA3B;AACH,CAJD;;AAMe,SAASH,4BAAT,CAAsCI,OAAtC,EAA+CC,SAA/C,EAA0D;AACrE,QAAMC,SAAS,GAAf;AACA,QAAMC,OAAOF,UAAU,CAAV,EAAaE,IAA1B;;AAEA,WAAO;AACHC,kBAAU,GADP;AAEHC,eAAO;AACHC,qBAAS,GADN;AAEHC,wBAAY,GAFT;AAGHC,sBAAU;AAHP,SAFJ;AAOHC,YAPG,gBAOEJ,KAPF,EAOS;AACRA,kBAAMK,UAAN,GAAmB,KAAnB;AACA,gBAAMJ,UAAUK,SAASN,MAAMC,OAAf,EAAwB,EAAxB,KAA+B,CAA/C;AACA,gBAAMC,aAAaI,SAASN,MAAME,UAAf,EAA2B,EAA3B,CAAnB;AACA,gBAAMK,UAAUC,KAAKC,IAAL,CAAUP,aAAaD,OAAvB,KAAmC,CAAnD;AACA,gBAAMS,cAAc,EAApB;AACA,gBAAIC,OAAO,CAAX;;AAEA,gBAAMC,eAAe,iBAAOC,QAAP,CAAgB,YAAM;AACvC,oBAAIF,QAAQJ,OAAZ,EAAqB;AACjB;AACH;;AAEDI;;AAEA,oBAAIA,QAAQD,WAAZ,EAAyB;AACrB;AACH;;AAEDV,sBAAMK,UAAN,GAAmB,IAAnB;;AAEAK,4BAAYI,IAAZ,CAAiBH,IAAjB;AACAX,sBAAMG,QAAN,GAAiBQ,IAAjB;AACAX,sBAAMK,UAAN,GAAmB,KAAnB;AACH,aAhBoB,EAgBlB,GAhBkB,EAgBb,EAAEU,SAAS,IAAX,EAhBa,CAArB;;AAkBA,gBAAMC,eAAe,SAAfA,YAAe;AAAA,uBACjBlB,KAAKmB,YAAL,GAAoBtB,QAAQuB,WAA5B,GAA0CvB,QAAQwB,OAAlD,GAA4DtB,MAD3C;AAAA,aAArB;;AAGA,gBAAMuB,qBAAqB,SAArBA,kBAAqB,CAAC3B,UAAD;AAAA,uBACvBD,gBAAgBC,UAAhB,KACA,CAACO,MAAMK,UADP,IAEAW,cAHuB;AAAA,aAA3B;;AAMA,gBAAMK,UAAU,SAAVA,OAAU,CAAC5B,UAAD,EAAgB;AAC5B,oBAAG,CAAC2B,mBAAmB3B,UAAnB,CAAJ,EAAmC;AAC/B;AACH;AACDmB;AACH,aALD;;AAOA;AACA;AACA;AACAA;;AAEAjB,oBAAQ2B,gBAAR,CAAyB,OAAzB,EAAkCD,OAAlC;AACArB,kBAAMuB,GAAN,CAAU,UAAV,EAAsB,YAAM;AACxB5B,wBAAQ6B,mBAAR,CAA4B,OAA5B,EAAqCH,OAArC;AACH,aAFD;AAGH;AA1DE,KAAP;AA4DH;;AAED9B,6BAA6BkC,OAA7B,GAAuC,CAAC,SAAD,EAAY,WAAZ,CAAvC","file":"maDatagridInfinitePagination.js","sourcesContent":["import angular from 'angular';\nimport lodash from 'lodash';\n\nconst isScrollingDown = wheelEvent => {\n    if (!wheelEvent) return true;\n\n    return wheelEvent.deltaY > 0;\n};\n\nexport default function maDatagridInfinitePagination($window, $document) {\n    const offset = 100;\n    const body = $document[0].body;\n\n    return {\n        restrict: 'E',\n        scope: {\n            perPage: '@',\n            totalItems: '@',\n            nextPage: '&'\n        },\n        link(scope) {\n            scope.processing = false;\n            const perPage = parseInt(scope.perPage, 10) || 1;\n            const totalItems = parseInt(scope.totalItems, 10);\n            const nbPages = Math.ceil(totalItems / perPage) || 1;\n            const loadedPages = [];\n            let page = 1;\n\n            const loadNextPage = lodash.debounce(() => {\n                if (page >= nbPages) {\n                    return;\n                }\n\n                page++;\n\n                if (page in loadedPages) {\n                    return;\n                }\n\n                scope.processing = true;\n\n                loadedPages.push(page);\n                scope.nextPage()(page);\n                scope.processing = false;\n            }, 500, { maxWait: 1000 });\n\n            const isNearBottom = () =>\n                body.offsetHeight - $window.innerHeight - $window.scrollY < offset;\n\n            const shouldLoadNextPage = (wheelEvent) =>\n                isScrollingDown(wheelEvent) &&\n                !scope.processing &&\n                isNearBottom()\n            ;\n\n            const handler = (wheelEvent) => {\n                if(!shouldLoadNextPage(wheelEvent)){\n                    return;\n                }\n                loadNextPage();\n            };\n\n            // Trigger the scroll at least once\n            // This way, it loads at least one screen of data to enable further scrolling\n            // @see https://github.com/marmelab/ng-admin/issues/681\n            loadNextPage();\n\n            $window.addEventListener('wheel', handler);\n            scope.$on('$destroy', () => {\n                $window.removeEventListener('wheel', handler);\n            });\n        }\n    };\n}\n\nmaDatagridInfinitePagination.$inject = ['$window', '$document'];\n"]}